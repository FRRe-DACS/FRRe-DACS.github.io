[{"id":0,"href":"/trabajos-practicos/tp_01/","title":"Trabajo Práctico Número 1","parent":"Trabajos Prácticos","content":"Objetivos    Que el alumno logre:\n Adquirir habilidades y conocimiento de las principales características y capacidades de las diferentes tecnologías y herramientas para el desarrollo y construcción de aplicaciones informáticas actuales. Aplicar criterios de selección de software en base a características y necesidades de un sistema. Adquirir habilidades en búsqueda y organización de información.   Modalidad de Desarrollo    Grupal: en grupos de entre 4 y 6 alumnos.\nFormato de Presentación    Individual con coloquio en máquina e informe impreso y digital (formato .odt .doc .pdf).\nFecha de Entrega    15/04/2021  Exposición Grupal    16/04/2021  Contenido del Informe de Presentación     Formato de hoja: A4. Carátula: Nombre de la materia, año de cursado, número de grupo, nombre completo de los integrantes. Correo electrónico de cada integrante. Índice de contenidos: índice temático de contenidos, organizado por lenguaje o herramientas de programación. Informe comparativo: Descripción de cada lenguaje evaluando cada una de las características seleccionadas. Extensión de No más de tres páginas por herramienta. Cuadro Comparativo: Cuadro sinóptico resumen de doble entrada (característica x herramienta) conteniendo los principales ítems y cuantificaciones. Bibliografía: Citación de Fuentes de referencia de la documentación o bibliografía consultada.  Aspectos de Evaluación     Cumplimiento de actividades propuestas y fechas indicadas. Investigación y desarrollo del material. Presentación.  La correcta redacción de los textos, su ortografía y puntuación. La relación y coherencia en cuanto a los tipos de letras utilizados para los capítulos, partes o secciones componentes del informe.    Actividad 1: Informe de investigación de Sistema de Control de Versiones     Investigar y elaborar un breve informe de sistemas de control de versiones disponibles en el mercado, tanto del tipo centralizado como descentralizado (entre 5 y 8, ejemplo git, mercurial, svn, cvs, bitkeeper, etc). Indicar los siguientes ítems:   Tipos de versionado soportados. Licencia Costo (gratuito / propietario) Quien lo mantiene. Plataformas soportadas (Windows, Unix, etc) Extras  Elaborar un cuadro comparativo que resuma los puntos antes mencionados Realizar el mismo cuadro con plataformas comerciales de sistemas de control de versiones (entre 5 y 8, por ejemplo Atlassian, Github, etc) agregando la columna sistemas de control de versiones que soporta mencionadas en el punto anterior. Además mencionar que herramientas adicionales incluyen (por ejemplo wiki, herramientas de gestión de proyectos, etc).    Actividad 2: Análisis y utilización de un Sistema de Control de Versiones Centralizado     Investigar un SCV Centralizado y explicar las principales características brevemente. Enumerar ventajas y desventajas, y comparación con SCV Descentralizados (cuadro comparativo). Seleccionar un servidor que se encuentre en la nube/web gratuito para realizar un ejemplo. Realizar un ejemplo iniciar el repositorio, clonarlo, modificarlo y generar conflictos, crear ramas y realizar merge de las mismas con el trunk principal, en un pequeño equipo por lo menos 3 miembros del grupo. Utilizar de ser necesario una herramienta cliente (gráfico o consola) o IDE. Documentar el ejemplo con capturas de commits de los miembros del equipo sobre un mismo archivo y otro ejemplo de branch y merge.  Actividad 3: Actividad práctica sobre Git y Github    Utilizando Git por línea de comandos o desde la Web de Github (según corresponda) realizar el siguiente ejercicio (ir evidenciando documentando los pasos ver nota al final):\n Un miembro del equipo va a clonar el siguiente repositorio y va a crear una rama para el grupo (la misma va a tener la forma GX/principal donde X es el número de grupo). En su repositorio local el usuario va a crear un va a crear una carpeta de grupo (grupoX) y dentro de la misma va crear un proyecto en Node.js. Commitear los cambios en el repositorio y subir la rama al servidor remoto. Les dejo un link de ayuda:  Link 1 Link 2   Una vez creada la rama del grupo en el servidor uno de los miembros del grupo va hacer un fork de la rama. Clona el fork, va a insertar una función que imprime en un label una entrada de pantalla, commit.\u0026gt; push y pull request al repositorio del grupo. Los demás miembros del grupo: Clonar el repositorio y toman la rama del grupo. A partir de la rama del grupo, crean una rama personal (gXiniciales grupo X e 2 iniciales) donde realizar una modificación en código (insertar una función que transforme el formato de un texto, que calcule una suma y la muestre en pantalla, etc) y realizar un commit y push, (Generar un conflicto y resolverlo). Ponerse de acuerdo en el grupo. Realizar un pull request de la rama personal a la principal de grupo. Aceptar / confirmar los pull request en la web, obtener a la funcionalidad completa del programa. Generar un tag para la versión con el nombre gX-V-1.0.0 X número de grupo (por línea de comando) y subir al repositorio remoto. Realizar un cambio en el programa sobre la rama principal del grupo y subir el cambio (que introduce un error al programa). Crear una rama a partir del tag creado y subir la rama al repo remoto y crear un pull request a la rama principal. Aceptar / Confirmar el pull request creado en el paso anterior (corregir el error).  "},{"id":1,"href":"/trabajos-practicos/tp-final/","title":"Trabajo Práctico Final (Draft)","parent":"Trabajos Prácticos","content":"Objetivos    Que el alumno logre:\n Adquirir habilidades prácticas sobre los conocimientos impartidos en las principales tecnologías y herramientas para el desarrollo y construcción de aplicaciones informáticas actuales.   Modalidad de Desarrollo    Grupal: en grupos de entre 4 y 6 alumnos.\nFormato de Presentación    Individual con coloquio en máquina e informe impreso y digital (formato .odt .doc .pdf).\nFecha de Entrega    02/07/2021  Contenido del Informe de Presentación     Formato de hoja: A4. Carátula: Nombre de la materia, año de cursado, número de grupo, nombre completo de los integrantes. Correo electrónico de cada integrante. índice de contenidos: índice temático de contenidos, organizado por lenguaje o herramientas de programación. Informe detallado: Descripción de las decisiones de diseño y de las soluciones implementadas para cumplimentar el práctico.  Aspectos de Evaluación    La evolución de trabajo se realizará de acuerdo a la siguiente tabla:\n   Aspecto Item Condición Puntaje     Cumplimiento funcional de la aplicación Funcionalidad Mandatorio 15   Arquitectura empleada       Multiplataforma Opcional 10    Cliente Liviano y cliente móvil Mandatorio 10   Acceso a Datos       Base de Datos Mandatorio 10    ORM Opcional 10   Lógica de Negocios  Mandatorio     Validación de Datos Opcional 5    Exposición de Servicios (Web Services) Mandatorio 15   Presentación       Usabilidad Mandatorio 10    MVC Opcional 10    Estilos Opcional 5   Total   100    Actividad 1: Escenario    El Ministerio de Desarrollo Productivo, junto con la Secretaría de Comercio Interior han sancionado la Resolución 237/2021 por la cual se crea el Sistema Informativo para la Implementación de Políticas de Reactivación Económica (SIPRE).\nEste sistema, cuyo objetivo final es contribuir a la reactivación económica del país, tiene por alcance a todas las empresas del sector comercio e industria local. Estas empresas deberá suministrar información de forma mensual, a través del repositorio de información del MINISTERIO DE DESARROLLO PRODUCTIVO, los primeros diez (10) días corridos de cada mes calendario.\nLa información suministrada deberá contener, como mínimo, los siguientes datos:\n CUIT de la empresa. Denominación del producto. Código EAN o equivalente sectorial del producto; y Precio por unidad de peso, cantidad o medida del producto. Cantidades producidas y vendidas  "},{"id":2,"href":"/programa-analitico/unidad-01/","title":"UNIDAD 1","parent":"Programa Analítico","content":"Introducción a las aplicaciones cliente-servidor    Repaso de las arquitecturas más comunes en sistemas distribuidos. Modelo de capas. Dos y tres capas. Modelo de tres capas, la tendencia actual. Modelo distribuido y de microservices, introducción. Interfaces de acceso a los datos: ODBC, OLE DB y los objetos ADO. JDBC. Publicadores y consumidores de datos. Patrones de diseño en arquitecturas distribuidas, Event-Sourcing.\nObjetivos específicos     Discriminar las diferencias conceptuales entre las distintas tecnologías existentes.  "},{"id":3,"href":"/programa-analitico/unidad-02/","title":"UNIDAD 2","parent":"Programa Analítico","content":"Servicios de BackEnd y servidores de aplicaciones    Arquitecturas de sistemas cliente servidor de 2 y 3 capas. Como se implementa una capa de negocios. Objetos basados en clases reutilizables. Modelos de ejecución actuales. Máquinas virtuales, containers y virtualización a nivel SO. Compiladores just-in-time. Distribución de aplicaciones a través de la red. Frameworks de persistencia, hibernate, JPA.\nObjetivos específicos     Seleccionar y aplicar correctamente las tecnologías existentes en el mercado. Que sepa analizar el contexto del problema y resuelva el mismo con la mejor herramienta posible.  "},{"id":4,"href":"/programa-analitico/unidad-03/","title":"UNIDAD 3","parent":"Programa Analítico","content":"El cliente liviano    Desarrollo con clientes livianos, el rol de los navegadores de internet en las tecnologías actuales. HTML. Arquitectura de un navegador de internet. Aplicaciones para Web: escenarios que soluciona. HTML dinámico: formas de generarlo. Arquitectura del servidor HTTP. Guiones (scripts). Scripting de lado del servidor. Scripting del lado del cliente. Lenguajes de scripting, generalidades. Formularios Web: qué son, cómo funcionan. Aplicaciones HTTP. Mantenimiento de sesiones. Estructuras de memoria, y estructuras relacionales para mantener sesiones. Cabecera HTTP. Acceso a bases de datos del lado del servidor. Seguridad de sistema web, frameworks de membresía. Consideraciones con barreras cortafuegos, enrutadores, proxies. Generalidades de capa de conexión segura (SSL). Firmas digitales, autoridad de internet. HTML5, escenarios que soluciona. Manejos de la visual con hojas de estilos en cascada y estilos XSLT. Javascript con Jquery.\nObjetivos específicos     Dominar las bases de las aplicaciones basadas en internet.  "},{"id":5,"href":"/programa-analitico/unidad-04/","title":"UNIDAD 4","parent":"Programa Analítico","content":"Aplicaciones distribuidas y servicios de internet    Evolución de los sistemas distribuidos. Desarrollo de aplicaciones distribuidas con clientes pesados y decodificadores de XML. Servicios Web en la internet. Protocolo de acceso simple a objetos SOAP. Modelo REST, Open Data Protocol, ATOM, JSON. Estándares basados en el modelo REST. Generalidades de JSON y su comparación con XML. HTML 5 Websockets. WebAPI. Conexiones long-polling, forever frame, server-sent events y websockets, ventajas y desventajas. Ejemplos de uso.\nObjetivos específicos     Diseñar un sistema distribuido basado en redes públicas  "},{"id":6,"href":"/programa-analitico/unidad-05/","title":"UNIDAD 5","parent":"Programa Analítico","content":"Frameworks de desarrollo de uso en la industria    La tecnología .Net, Java, Golang, Rust. Similitudes y diferencias en el modelo de ejecución. Arquitectura de las máquinas virtuales específicas. Clientes pesados. Clientes livianos. Objetos de negocio. Capa de acceso a datos. Framework de persistencia. Capa de fachada web y cliente inteligente. Entornos integrados de desarrollo. Ciclos de vida de una aplicación. Servicios de los entornos de desarrollo integrados (IDE) modernos. Servidores de integración continua. Ciclo de vida de proyectos basado en la nube.\nObjetivos específicos:     Familiarizarse con las grandes familias de plataformas tecnológicas en uso en la industria mundial.  "},{"id":7,"href":"/programa-analitico/unidad-06/","title":"UNIDAD 6","parent":"Programa Analítico","content":"Las tecnologías emergentes: la Nube    Comparativa entre sistemas en la nube y sistemas sobre demanda. El software como servicio. La infraestructura como servicio. El ecosistema de desarrollo, venta de aplicaciones, entorno de ejecución, dependencia de servicios específicos basados en la nube: localización y seguimiento, licenciamiento, autenticación y autorización distribuidas. Servicios en la nube para clientes convencionales y para dispositivos móviles. Comparativas entre Amazon Cloud Services, Windows Azure, Google Apps, y su integración con las IDEs correspondientes. Kuberntes y las arquitecturas de microservicios y los service mesh.\nObjetivos específicos     Diseñar un sistema basado en servicios en la nube.  "},{"id":8,"href":"/categories/","title":"Categories","parent":"Fundamentación","content":""},{"id":9,"href":"/","title":"Fundamentación","parent":"","content":"La asignatura Desarrollo de Aplicaciones Cliente Servidor ha dado, en su dictado de más de una década, un contacto intenso con las herramientas de uso normal en la industria para el desarrollo y la ingeniería de software. En la actualidad estos conceptos generales siguen siendo válidos, pero han cambiado significativamente los detalles subyacentes en el diseño, programación, prueba, despliegue y mantenimiento de una aplicación cliente-servidor. El tráfico de internet generado por dispositivos táctiles y móviles es mayor que el de equipos de escritorio, y la introducción las nueves de datos fuerzan al ingeniero a dominar una nueva forma de crear aplicaciones altamente conectadas. Las tecnologías cliente-servidor han mutado, mayor mente desde un modelo monolítico a un modelo distribuido de micro-servicios, basado en infraestructuras basadas en contenedores, posibilitando el escalamiento horizontal. Un importante porcentaje de código de cualquier aplicación está relacionado con la administración de conectividad de datos sobre redes públicas, y por lo tanto se hace mandatorio enfocarse en los estándares emergentes y abiertos basados en internet, tanto en el cliente como en la infraestructura del servidor.\nLa adopción de los lenguajes de programación también han cambiado significativamente, pasando de lenguajes como javascript y golang, haciendo que los frameworks de ejecución cambien significativamente. Esto incluye servicios de soporte al ciclo de vida de una aplicación, desde el diseño hasta el mantenimiento de la misma, tanto en los modelos on-premise, como los basados en la nube. Igualmente, los sistemas convergentes son una realidad, al borrarse los límites entre los sistemas móviles y de escritorio, las técnicas de desarrollo también han mutado. Es evidente que semejante razón de cambio exige una materia de orientación eminentemente práctica y con contenido puesto al día, contemplando los conceptos tradicionales de la ingeniería de software cliente-servidor, pero haciendo énfasis práctico en los estándares emergentes de estos nuevos modelos, sobre todo en las nuevas tecnologías convergentes.\nObjetivos Generales de la asignatura     Que el alumno profundice los conocimientos en el análisis, diseño y desarrollo de aplicaciones en la metáfora cliente-servidor. Que el alumno aplique las herramientas que el mercado ofrece para crear soluciones útiles a problemas reales, produciendo sistemas de alto rendimiento. Que el alumno tenga acceso a tecnologías de última generación. Que el alumno pueda desarrollar aplicaciones utilizando tecnologías emergentes, como ser la computación en la nube.  "},{"id":10,"href":"/programa-analitico/","title":"Programa Analítico","parent":"Fundamentación","content":"UNIDAD 1: Introducción a las aplicaciones cliente-servidor    Repaso de las arquitecturas más comunes en sistemas distribuidos. Modelo de capas. Dos y tres capas. Modelo de tres capas, la tendencia actual. Modelo distribuido y de microservices, introducción. Interfaces de acceso a los datos: ODBC, OLE DB y los objetos ADO. JDBC. Publicadores y consumidores de datos. Patrones de diseño en arquitecturas distribuidas, Event-Sourcing.\nObjetivos específicos     Discriminar las diferencias conceptuales entre las distintas tecnologías existentes.  "},{"id":11,"href":"/tags/","title":"Tags","parent":"Fundamentación","content":""},{"id":12,"href":"/trabajos-practicos/","title":"Trabajos Prácticos","parent":"Fundamentación","content":""}]